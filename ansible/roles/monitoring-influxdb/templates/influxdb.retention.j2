{% for database in databases %}
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "alter retention policy default on {{ database }} duration 14d"

  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop retention policy _1m on {{ database }}"
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop retention policy _10m on {{ database }}"

  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create retention policy _1m on {{ database }} duration  30d replication 1"
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create retention policy _10m on {{ database }} duration  90d replication 1"

  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop continuous query downsample_{{ database }}_1m on {{ database }}"
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop continuous query downsample_{{ database }}_10m on {{ database }}"

  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_{{ database }}_1m ON {{ database }} begin select last(value) as last, sum(value) as sum, mean(value) as value into {{ database }}._1m.:MEASUREMENT from {{ database }}.\"default\"./.*/ where metric_type != 'timing' group by time(1m), * end"
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_{{ database }}_10m on {{ database }} begin select last(last) as last, sum(sum) as sum, mean(value) as value into {{ database }}._10m.:MEASUREMENT from {{ database }}._1m./.*/ where metric_type != 'timing' group by time(10m), * end"

{% endfor %}

