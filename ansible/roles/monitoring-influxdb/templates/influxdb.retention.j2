{% for database in databases %}
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "alter retention policy default on {{ database }} duration 14d"

  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create retention policy _1m on {{ database }} duration  30d replication 1"
  influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create retention policy _10m on {{ database }} duration  90d replication 1"

{% endfor %}

{% if downsample_statsd_metrics is defined and downsample_statsd_metrics|bool %}
  {% for database in statsd_databases %}

    influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_{{ database }}_1m ON {{ database }} begin select mean(value) as value into {{ database }}._1m.:MEASUREMENT from {{ database }}.\"default\"./.*/ where metric_type != 'timing' group by time(1m), * end"
    influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_{{ database }}_10m on {{ database }} begin select mean(value) as value into {{ database }}._10m.:MEASUREMENT from {{ database }}._1m./.*/ where metric_type != 'timing' group by time(10m), * end"
    influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_timing_{{ database }}_data_1m on {{ database }} begin select mean(\"90_percentile\") as \"90_percentile\", sum(count) as counts, mean(stddev) as stddev, min(lower) as lower, max(upper) as upper, mean(mean) as mean into {{ database }}._1m.:MEASUREMENT from {{ database }}.\"default\"./.*/ where metric_type = 'timing' group by time(1m), * end"
    influx -database "{{ database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_timing_{{ database }}_data_10m on {{ database }} begin select mean(\"90_percentile\") as \"90_percentile\", sum(counts) as counts, mean(stddev) as stddev, min(lower) as lower, max(upper) as upper, mean(mean) as mean into {{ database }}._10m.:MEASUREMENT from {{ database }}._1m./.*/ where metric_type = 'timing' group by time(10m), * end"


  {% endfor %}

{% else %}

  {% if downsample_collectd_metrics is defined and downsample_collectd_metrics|bool %}  

     influx -database "{{ collectd_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_{{ collectd_database }}_1m ON {{ collectd_database }} begin select mean(value) as value into {{ collectd_database }}._1m.:MEASUREMENT from {{ collectd_database }}.\"default\"./.*/ group by time(1m), * end"
     influx -database "{{ collectd_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "create continuous query downsample_{{ collectd_database }}_10m on {{ collectd_database }} begin select mean(value) as value into {{ collectd_database }}._10m.:MEASUREMENT from {{ collectd_database }}._1m./.*/ group by time(10m), * end"
  
   {% endif %}

{% endif %}

  influx -database "{{ tools_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "alter retention policy default on {{ tools_database }} duration 24w"

  influx -database "{{ tools_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop retention policy _1m on {{ tools_database }}"
  influx -database "{{ tools_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop retention policy _10m on {{ tools_database }}"
  influx -database "{{ tools_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop continuous query downsample_{{ tools_database }}_1m on {{ tools_database }}"
  influx -database "{{ tools_database }}" -username "{{ influx_admin_user }}" -password "{{ influx_admin_password }}" -execute "drop continuous query downsample_{{ tools_database }}_10m on {{ tools_database }}"

