---
# Monitoring agents (like collectd) are needed to gather and send system statistics for monitoring and alerting
# This script installs the collectd from APT to make sure all required and
# recommend packages exist.  It also installs the patched collectd from
# GitHub.  This patched version can handle 128 byte strings instead of just
# 64 byte strings.

# Sending logs to logstash
- name: Update configuration to send syslogs to logstash
  template: src=logstash-emitter-forward-to-collector.conf.j2 dest="/etc/rsyslog.d/{{ logstash_dest_filename }}"
  become: yes
  when: disable_logstash is not defined or not disable_logstash
  notify: restart rsyslog
  tags:
    - logstash

# Don't send logs to logstash if disable_logstash is True (from command line this can be done using -e "disable_logstash=0")
- name: Remove configuration to send syslogs to logstash
  file: name="/etc/rsyslog.d/{{ logstash_dest_filename }}" state=absent
  when: disable_logstash is defined and disable_logstash
  become: yes
  notify: restart rsyslog
  tags:
    - logstash

- name: Create directories which need to exist, if necessary
  file: path={{ item }} state=directory owner=root
  with_flattened:
    - "{{ group_dirs_to_create | default([]) }}"
    - "{{ host_dirs_to_create | default([]) }}"
  become: yes
  tags:
    - configuration

- name: Create collectd related directories, if necessary
  file: path={{ item }} state=directory owner=root
  with_flattened:
    - "{{ collectd_log_dir }}"
    - "{{ collectd_python_plugin_dir }}"
  become: yes
  tags:
    - monitoring

- name: Add collectd repository key to local keychain
  apt_key: url=http://pkg.ci.collectd.org/pubkey.asc state=present
  become: yes
  tags:
    - monitoring

- name: Add collectd repository to apt sources list
  apt_repository: repo='deb http://pkg.ci.collectd.org/deb/ trusty collectd-5.5' state=present
  become: yes
  tags:
    - monitoring

- name: Update package repo cache
  apt: update_cache=yes
  become: yes
  tags:
    - packages
    - update_cache

- name: Install collectd
  apt: name=collectd force=yes install_recommends="{{ collectd_install_recommends }}" state=latest
  become: yes
  notify: restart collectd
  tags:
    - monitoring

- name: Install collectd-core
  apt: name=collectd-core force=yes install_recommends="{{ collectd_install_recommends }}" state=latest
  become: yes
  notify: restart collectd
  tags:
    - monitoring

- name: Install collectd128 required packages
  with_items: "{{ collectd128_packages }}"
  apt: name="{{ item }}" state="latest"
  become: yes
  tags:
    - collectd128
    - monitoring
    - packages

- name: Download patched collectd
  get_url: url="{{ collectd128_package_url }}" dest="/tmp/{{ collectd128_package_file }}" sha256sum="{{ collectd128_package_sha256 }}"
  tags:
    - collectd128
    - monitoring
    - install

- name: Install patched collectd
  unarchive: copy=no dest="/opt" src="/tmp/{{ collectd128_package_file }}" creates="/opt/{{ collectd128_package }}"
  become: yes
  notify: restart collectd
  tags:
    - collectd128
    - monitoring
    - install

# There's a dangling link that collectd 5.4 leaves behind, need to research more on this
- name: unlink /etc/rc2.d/S95collectd
  file: path=/etc/rc2.d/S95collectd state=absent
  become: yes
  tags:
    - monitoring

- name: Configure collectd
  template: src=collectd.conf.j2 dest=/etc/collectd/collectd.conf
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - configuration

- name: Remove collectd init.d script
  file: path=/etc/init.d/collectd state=absent
  become: yes
  tags:
    - monitoring

- name: Install collectd upstart script
  template: src=collectd.conf.upstart.j2 dest=/etc/init/collectd.conf
  notify: restart collectd
  become: yes
  tags:
    - collectd128
    - monitoring
    - install

# The following are needed only if this node is part of the cluster os

- name: Install zookeeper collectd by copying the python plugin
  copy: src=zk-collectd.py dest="{{ collectd_python_plugin_dir }}"
  when: is_in_masters is defined
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-zookeeper

- name: Copy the required python plugin mesos_master file
  when: is_in_masters is defined
  copy: src=mesos-master.py dest="{{ collectd_python_plugin_dir }}"
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-mesos

- name: Copy the required python plugin mesos_master-tasks file
  when: is_in_masters is defined
  copy: src=mesos-master-tasks.py dest="{{ collectd_python_plugin_dir }}"
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-mesos

- name: Copy the required python plugin mesos_slave file
  when: is_in_slaves is defined
  copy: src=mesos-slave.py dest="{{ collectd_python_plugin_dir }}"
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-mesos

# for bamboo server status check
- name: Copy the required python plugin bamboo status plugin file
  when: is_in_bamboo_servers is defined
  copy: src=bamboo_status.py dest="{{ collectd_python_plugin_dir }}"
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-bamboo

# for bamboo server config-hash check
- name: Copy the required python plugin bamboo config hash plugin file
  when: is_in_bamboo_servers is defined
  copy: src=bamboo_confighash.py dest="{{ collectd_python_plugin_dir }}"
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-bamboo

# for haproxy plugin stats collection
- name: Copy the required python plugin HAProxy
  when: is_in_haproxy is defined
  copy: src=collectd-plugins/collectd-haproxy/haproxy.py dest="{{ collectd_python_plugin_dir }}"
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-haproxy

# The following are needed only if docker is used in this node

# First check if docker is installed
- name: Check if docker is installed
  command: "which docker"
  register: which_docker
  failed_when: which_docker.stdout == ""
  ignore_errors: yes
  always_run: yes
  tags:
    - monitoring
    - monitor-docker
    - docker-check

# Note: Ubuntu's pip install is broken. Need to use easy_install instead. Install python-setuptools to get easy_install
- name: Install python python-setuptools
  apt: name=python-setuptools state=present
  when: not which_docker.failed
  become: yes
  tags:
    - monitoring
    - packages
    - monitor-docker

# Note: Ubuntu's pip install is broken. So, use easy_install instead.
- name: Install pip
  easy_install: name=pip
  when: not which_docker.failed
  become: yes
  tags:
    - monitoring
    - packages
    - monitor-docker

- name: Install docker and marathon collectd dependency - python-dateutil
  pip: name=python-dateutil version=2.4.2
  become: yes
  tags:
    - monitoring
    - monitor-docker
    - monitor-marathon

- name: Install marathon collectd dependency - pytz
  when: is_in_marathon_servers is defined
  pip: name=pytz version=2016.4
  become: yes
  tags:
    - monitoring
    - monitor-marathon

- name: Install docker collectd dependency - docker-py
  pip: name=docker-py version=1.6.0
  when: not which_docker.failed
  become: yes
  tags:
    - monitoring
    - monitor-docker

- name: Install docker collectd by copying the python plugin
  copy: src=collectd-plugins/docker/dockerplugin.py dest="{{ collectd_python_plugin_dir }}"
  when: not which_docker.failed
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-docker

- name: Copy docker collectd TypesDb
  copy: src=collectd-plugins/docker/dockerplugin.db dest="{{ collectd_python_plugin_dir }}"
  when: not which_docker.failed
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-docker

#This is temporary fix,until we find a different way to collect docker metrics
- lineinfile: dest=/etc/crontab line="*/10 *  * * *   root    service collectd restart"
  when: not which_docker.failed
  become: yes
  tags:
    - monitor-docker

- name: Install marathon collectd plugin
  copy: src=collectd-plugins/marathon/marathon.py dest="{{ collectd_python_plugin_dir }}"
  when: is_in_marathon_servers is defined
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-marathon

- name: Install marathon_tasks collectd plugin
  copy: src=collectd-plugins/marathon_tasks/marathon_tasks.py dest="{{ collectd_python_plugin_dir }}"
  when: is_in_marathon_servers is defined
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-marathon

- name: Install chronos collectd plugin
  copy: src=collectd-plugins/chronos/chronos.py dest="{{ collectd_python_plugin_dir }}"
  when: is_in_masters is defined
  become: yes
  notify: restart collectd
  tags:
    - monitoring
    - monitor-chronos
